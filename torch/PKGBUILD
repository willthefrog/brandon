# -*- mode: sh; tab-width: 2; -*-
# Maintainer: Yang Zhang <yangzhang@live.com>
# Upstream URL: https://github.com/pytorch/pytorch

_pkgname=pytorch
pkgname=python-torch-cuda-git
pkgver=20200112.r22567.14593f077
pkgrel=1
pkgdesc="Tensors and Dynamic neural networks in Python with strong GPU acceleration"
arch=('x86_64')
url="https://pytorch.org/"
license=('BSD')
provides=('python-torch')
conflicts=('python-torch')
depends=('python-future' 'python-numpy' 'python-cffi' 'python-yaml' 'python-typing_extensions' 'python-sympy'
         'cuda' 'cudnn' 'nccl')
makedepends=('git' 'ninja' 'cmake' 'python-setuptools')
optdepends=('python-triton: for the Inductor backend')
source=("${_pkgname}::git+https://github.com/pytorch/pytorch.git")
md5sums=('SKIP')
options=(debug strip)

pkgver() {
  cd "$_pkgname"
  echo "$(git log -1 --format="%cd" --date=short | sed 's|-||g').r$(git rev-list --count HEAD)".$(git describe --always | sed 's/.*-//g')
}

prepare() {
  cd "$_pkgname"
  git submodule update --init --recursive
}

build() {
  cd "$_pkgname"

  if [ -e /opt/cuda/bin/gcc ]; then
    export CC=/opt/cuda/bin/gcc
  fi
  if [ -e /opt/cuda/bin/g++ ]; then
    export CXX=/opt/cuda/bin/g++
  fi
  export CFLAGS="-march=skylake -mtune=generic -O2 -pipe -fstack-protector-strong"
  export CXXFLAGS="-march=skylake -mtune=generic -O2 -pipe -fstack-protector-strong"
  export CUDA_BIN_PATH=/opt/cuda
  export CUDNN_LIB_DIR=/usr/lib
  export CUDNN_INCLUDE_DIR=/usr/include
  export TORCH_NVCC_FLAGS="-Xfatbin -compress-all"

  export PYTORCH_BUILD_VERSION=`grep "version = '" setup.py | sed -E "s/version = '(.*)'/\1/"`
  PYTHON3_INC=`python -c "import sysconfig; print(sysconfig.get_config_vars('INCLUDEPY')[0])"`
  PYTHON3_LIB=`python -c "import sysconfig; print('/'.join(sysconfig.get_config_vars('LIBDIR', 'INSTSONAME')))"`
  INSTALL_DIR="$srcdir/$_pkgname/torch"

  export CFLAGS="${CFLAGS} -Wno-error=maybe-uninitialized -Wno-error=uninitialized"
  export CXXFLAGS="${CXXFLAGS} -Wno-error=maybe-uninitialized -Wno-error=uninitialized"
  cmake -GNinja -B build -S .                    \
        -DUSE_FAST_NVCC=ON                       \
        -DUSE_PRECOMPILED_HEADERS=ON             \
        -DTORCH_CUDA_ARCH_LIST="7.0+PTX"         \
        -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR      \
        -DATEN_NO_TEST=ON                        \
        -DBUILD_PYTHON=ON                        \
        -DPYTHON_EXECUTABLE=`which python`       \
        -DPYTHON_INCLUDE_DIR=$PYTHON3_INC        \
        -DPYTHON_LIBRARY=$PYTHON3_LIB            \
        -DBUILD_ONNX_PYTHON=ON                   \
        -DUSE_CUDA=ON                            \
        -DUSE_NUMPY=ON                           \
        -DBUILD_CUSTOM_PROTOBUF=ON               \
        -DUSE_SYSTEM_EIGEN_INSTALL=OFF           \
        -DBUILD_CAFFE2=OFF                       \
        -DUSE_BREAKPAD=OFF                       \
        -DATEN_THREADING=NATIVE                  \
        -DUSE_ROCM=OFF                           \
        -DUSE_MPI=OFF                            \
        -DUSE_MKLDNN=OFF                         \
        -DBUILD_TEST=OFF                         \
        -DUSE_XNNPACK=OFF                        \
        -DUSE_FBGEMM=OFF                         \
        -DUSE_QNNPACK=OFF                        \
        -DUSE_NNPACK=OFF                         \
        -DUSE_MIOPEN=OFF                         \
        -DUSE_GLOO=ON                            \
        -DUSE_SYSTEM_NCCL=ON
  cmake --build build -j"$(nproc)"
  touch build/build.ninja
  python setup.py build
}

python_site_path() {
  $1 - <<END
from __future__ import print_function
import site
print(site.getsitepackages()[0])
END
}

package() {
  cd "$_pkgname"
  python setup.py install --skip-build --root="$pkgdir" --optimize=1
  install -m644 -D LICENSE "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
  # XXX tools/setup_helpers/split_types.py returns full path
  find "$pkgdir" -type f -iname "*SOURCES.txt" | xargs sed -i "s#$srcdir/$_pkgname/##g"

  rm -rf "$pkgdir/usr/bin"
  rm -rf "$pkgdir$(python_site_path `which python`)/caffe"
}

# vim: set ts=2 sw=2:
