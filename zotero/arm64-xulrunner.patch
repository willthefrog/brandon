diff --git a/app/build.sh b/app/build.sh
index 6ab6bd6..9a378bc 100755
--- a/app/build.sh
+++ b/app/build.sh
@@ -239,8 +239,8 @@ elif [ $BUILD_WIN == 1 ]; then
 	unzip -qj "${WIN_RUNTIME_PATH_PREFIX}win-x64"/omni.ja "hyphenation/*" -d "$app_dir"/hyphenation/
 elif [ $BUILD_LINUX == 1 ]; then
 	# Non-arch-specific files, so just use 64-bit version
-	cp -Rp "${LINUX_RUNTIME_PATH_PREFIX}x86_64"/browser/omni "$app_dir"
-	unzip -qj "${LINUX_RUNTIME_PATH_PREFIX}x86_64"/omni.ja "hyphenation/*" -d "$app_dir"/hyphenation/
+	cp -Rp "${LINUX_RUNTIME_PATH_PREFIX}aarch64"/browser/omni "$app_dir"
+	unzip -qj "${LINUX_RUNTIME_PATH_PREFIX}aarch64"/omni.ja "hyphenation/*" -d "$app_dir"/hyphenation/
 fi
 set -e
 cd $omni_dir
@@ -878,7 +878,7 @@ if [ $BUILD_LINUX == 1 ]; then
 		archs="i686 x86_64"
 	fi
 	
-	for arch in $archs; do
+	for arch in aarch64; do
 		runtime_path="${LINUX_RUNTIME_PATH_PREFIX}${arch}"
 		
 		# Set up directory
@@ -911,6 +911,7 @@ if [ $BUILD_LINUX == 1 ]; then
 		cp -RH "$CALLDIR/modules/zotero-libreoffice-integration/install" "$APPDIR/integration/libreoffice"
 		
 		# Copy icons
+		mkdir -p "$APPDIR/icons/"
 		cp "$CALLDIR/linux/icons/icon32.png" "$APPDIR/icons/"
 		cp "$CALLDIR/linux/icons/icon64.png" "$APPDIR/icons/"
 		cp "$CALLDIR/linux/icons/icon128.png" "$APPDIR/icons/"
@@ -922,7 +923,7 @@ if [ $BUILD_LINUX == 1 ]; then
 		
 		# Copy over removed-files and make a precomplete file
 		pushd "$APPDIR"
-		cp "$CALLDIR/update-packaging/removed-files_linux-$arch" removed-files
+		cp "$CALLDIR/update-packaging/removed-files_linux-x86_64" removed-files
 		python3 "$CALLDIR/scripts/createprecomplete.py"
 		if [ ! -s precomplete ]; then
 			echo "precomplete file not created -- aborting" 2>&1
diff --git a/app/config.sh b/app/config.sh
index 5d96e78..251b815 100644
--- a/app/config.sh
+++ b/app/config.sh
@@ -2,7 +2,7 @@ DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
 
 # Version of Gecko to build with
 GECKO_VERSION_MAC="128.5.0esr"
-GECKO_VERSION_LINUX="128.5.0esr"
+GECKO_VERSION_LINUX="128.5.1-1.el9"
 GECKO_VERSION_WIN="128.5.0esr"
 RUST_VERSION=1.78.0
 
diff --git a/app/scripts/fetch_xulrunner b/app/scripts/fetch_xulrunner
index ee94270..27cdbd3 100755
--- a/app/scripts/fetch_xulrunner
+++ b/app/scripts/fetch_xulrunner
@@ -158,15 +158,6 @@ function modify_omni {
 	# Continue using app.update.auto in prefs.js on Windows
 	replace_line 'PER_INSTALLATION_PREFS_PLATFORMS = \["win"\]' 'PER_INSTALLATION_PREFS_PLATFORMS = []' modules/UpdateUtils.sys.mjs
 	
-	# Prompt if major update is available instead of installing automatically on restart
-	replace_line 'if \(!updateAuto\) \{' 'if (update.type == "major") {
-      LOG("UpdateService:_selectAndInstallUpdate - prompting because it is a major update");
-      AUSTLMY.pingCheckCode(this._pingSuffix, AUSTLMY.CHK_SHOWPROMPT_PREF);
-      Services.obs.notifyObservers(update, "update-available", "show-prompt");
-      return;
-    }
-    if (!updateAuto) {' modules/UpdateService.sys.mjs
-	
 	# Avoid console warning about resource://gre/modules/FxAccountsCommon.js
 	replace_line 'const logins = this._data.logins;' 'const logins = this._data.logins; if (this._data.logins.length != -1) return;' modules/LoginStore.sys.mjs
 	
@@ -608,28 +599,29 @@ if [ $BUILD_LINUX == 1 ]; then
 	else
 		arches="i686 x86_64"
 	fi
-	for arch in $arches; do
+	for arch in aarch64; do
 		xdir="firefox-$arch"
 		rm -rf $xdir
 		
-		archived_file="firefox-$GECKO_VERSION-$arch.tar.bz2"
+		archived_file="firefox-$GECKO_VERSION.aarch64.rpm"
 		if [ -e "$archived_file" ]; then
 			echo "Using $archived_file"
-			cp "$archived_file" "firefox-$GECKO_VERSION.tar.bz2"
+			cp "$archived_file" "firefox-$GECKO_VERSION.rpm"
 		else
-			curl -O "$DOWNLOAD_URL/linux-$arch/en-US/firefox-$GECKO_VERSION.tar.bz2"
-			# Store local copy of unmodified app
-			cp "firefox-$GECKO_VERSION.tar.bz2" "$archived_file"
+			# found a aarch64 build with version close to the x86_64 one, the centos version is static linked to icu, avoids version mismatch
+			curl -O "https://rpmfind.net/linux/centos-stream/9-stream/AppStream/aarch64/os/Packages/firefox-$GECKO_VERSION.aarch64.rpm"
+			cp "$archived_file" "firefox-$GECKO_VERSION.rpm"
 		fi
 
-		tar xvf firefox-$GECKO_VERSION.tar.bz2
-		mv firefox firefox-$arch
-
+		mkdir -p tmp
+		bsdtar xvf firefox-$GECKO_VERSION.rpm -C tmp
+		mv tmp/usr/lib64/firefox firefox-$arch
+		rm -r tmp
 		pushd firefox-$arch
 		modify_omni $arch
 		popd
 		echo $($SCRIPT_DIR/xulrunner_hash -p l) > hash-linux
-		rm "firefox-$GECKO_VERSION.tar.bz2"
+		rm "firefox-$GECKO_VERSION.rpm"
 	done
 fi
 
