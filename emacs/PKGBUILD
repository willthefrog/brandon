# -*- mode: sh; tab-width: 2; -*-
# Maintainer: Yang Zhang <yangzhang@live.com>
# Upstream URL: http://www.gnu.org/software/emacs/

COMPO3="YES"      # Produce .eln files with highest optimization level
GOLD="YES"        # Use the gold linker.
LTO="YES"         # Enable link-time optimization. Not that experimental anymore.
NOGZ="YES"        # Don't compress .el files.
NOX=              # CLI only binary.
NOCAIRO=          # Disable here.

pkgname=(emacs-git emacs-nox-git)
pkgbase=emacs
pkgver=29.0.50.150793
pkgrel=1
pkgdesc="GNU Emacs. Development master branch."
arch=('x86_64')
url="http://www.gnu.org/software/emacs/"
license=('GPL3')
depends=('gnutls' 'libxml2' 'jansson' 'gpm' 'libgccjit')
makedepends=('git' 'alsa-lib' 'giflib' 'gtk3' 'harfbuzz' 'libjpeg-turbo' 'libotf' 'm17n-lib')
source=("$pkgbase::git://git.savannah.gnu.org/emacs.git#branch=feature/pgtk"
        "rebase.patch::https://github.com/emacs-mirror/emacs/compare/feature/pgtk...master.diff")
options=(!strip)
md5sums=('SKIP' 'SKIP')

pkgver() {
  cd "$pkgbase"

  printf "%s.%s" \
    "$(grep AC_INIT configure.ac | \
    sed -e 's/^.\+\ \([0-9]\+\.[0-9]\+\.[0-9]\+\?\).\+$/\1/')" \
    "$(curl -I -k "https://api.github.com/repos/emacs-mirror/emacs/commits?per_page=1" | sed -n '/^[Ll]ink:/ s/.*"next".*page=\([0-9]*\).*"last".*/\1/p')"
}

# There is no need to run autogen.sh after first checkout.
# Doing so, breaks incremental compilation.
prepare() {
  cd "$pkgbase"
  patch -p1 -i ../rebase.patch
  [[ -x configure ]] || ( ./autogen.sh git && ./autogen.sh autoconf )
}

build_() {
  cd "$srcdir/$pkgbase"

  make clean

  local _conf=(
    --prefix=/usr
    --sysconfdir=/etc
    --libexecdir=/usr/lib
    --localstatedir=/var
    --mandir=/usr/share/man
    --with-gameuser=:games
    --without-modules
    --without-toolkit-scroll-bars
    # Beware https://debbugs.gnu.org/cgi/bugreport.cgi?bug=25228
    # dconf and gconf break font settings you set in ~/.emacs.
    # If you insist you'll need to read that bug report in *full*.
    # Good luck!
   --without-gconf
   --without-gsettings
   --with-native-compilation
  )

  if [[ $NOX == "YES" ]]; then
    _conf+=( '--without-x' '--with-x-toolkit=no' '--with-sound=no' '--without-xft' '--without-lcms2' '--without-rsvg' );
  else
    _conf+=( '--with-pgtk' '--without-xwidgets' '--without-xaw3d' '--with-sound=alsa' );
  fi

  if [[ $NOCAIRO == "YES" ]] || [[ $NOX == "YES" ]]; then
    _conf+=( '--without-cairo' );
  fi

  if [[ $NOGZ == "YES" ]]; then
    _conf+=( '--without-compress-install' );
  fi

  export CFLAGS+=" -O3 -march=skylake -fomit-frame-pointer -g -flto"
  export CXXFLAGS+=" -O3 -march=skylake -fomit-frame-pointer -g -flto"

  if [[ $LTO == "YES" ]]; then
    export CFLAGS+=" -fuse-linker-plugin"
    export CXXFLAGS+=" -fuse-linker-plugin"
    _conf+=(
      '--enable-link-time-optimization'
    );
  fi

  if [[ $GOLD == "YES" ]]; then
    export LD=/usr/bin/ld.gold
    export CFLAGS+=" -fuse-ld=gold";
    export CXXFLAGS+=" -fuse-ld=gold";
  fi

  ./configure "${_conf[@]}"

  if [[ $COMPO3 == "YES" ]]; then
    export BYTE_COMPILE_EXTRA_FLAGS="--eval '(setq comp-speed 3)'"
  fi

  make NATIVE_FULL_AOT=1 bootstrap -j`nproc`
}

package_emacs-git() {
  provides=('emacs')
  conflicts=('emacs' 'emacs-nox')
  depends+=('alsa-lib' 'giflib' 'gtk3' 'harfbuzz' 'libjpeg-turbo' 'libotf' 'm17n-lib')

  if [[ ! $NOCAIRO == "YES" ]]; then
    depends+=( 'cairo' );
  fi

  NOX=""
  build_
  cd "$srcdir/$pkgbase"

  make DESTDIR="$pkgdir/" install

  # remove conflict with ctags package
  mv "$pkgdir"/usr/bin/{ctags,ctags.emacs}

  if [[ $NOGZ == "YES" ]]; then
    mv "$pkgdir"/usr/share/man/man1/{ctags.1,ctags.emacs.1};
  else
    mv "$pkgdir"/usr/share/man/man1/{ctags.1.gz,ctags.emacs.1.gz}
  fi

  # fix user/root permissions on usr/share files
  find "$pkgdir"/usr/share/emacs/ | xargs chown root:root

  # fix permssions on /var/games
  mkdir -p "$pkgdir"/var/games/emacs
  chmod 775 "$pkgdir"/var/games
  chmod 775 "$pkgdir"/var/games/emacs
  chown -R root:games "$pkgdir"/var/games

}

package_emacs-nox-git() {
  provides=('emacs-nox')
  conflicts=('emacs' 'emacs-git')

  NOX="YES"
  build_
  cd "$srcdir/$pkgbase"

  make DESTDIR="$pkgdir/" install

  # remove conflict with ctags package
  mv "$pkgdir"/usr/bin/{ctags,ctags.emacs}

  if [[ $NOGZ == "YES" ]]; then
    mv "$pkgdir"/usr/share/man/man1/{ctags.1,ctags.emacs.1};
  else
    mv "$pkgdir"/usr/share/man/man1/{ctags.1.gz,ctags.emacs.1.gz}
  fi

  # fix user/root permissions on usr/share files
  find "$pkgdir"/usr/share/emacs/ | xargs chown root:root

  # fix permssions on /var/games
  mkdir -p "$pkgdir"/var/games/emacs
  chmod 775 "$pkgdir"/var/games
  chmod 775 "$pkgdir"/var/games/emacs
  chown -R root:games "$pkgdir"/var/games
}

# vim:set ft=sh ts=2 sw=2 et:
